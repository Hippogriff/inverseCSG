language: c++


branches:
    only:
    - master
    - /^travis-.*/


matrix:
  include:
#     - name: "Last Ubuntu 19.10 (Eoan Ermine) with GCC"
#       os: linux
#       dist: bionic
#       group: travis_latest
#       env: DOCKER="ubuntu:eoan" VARIANT="ubuntu" TOOL="compile" COMPILER_C="gcc" COMPILER_CXX="g++" TRAVIS_DIST_NAME="eoan"
#       compiler: gcc
#       os: linux
#       sudo: required
#       addons:
#         apt:
#           sources:
#           - ubuntu-toolchain-r-test
#           packages:
#           - gcc-9
#           - g++-9
#     - dist: xenial
#       compiler: gcc
#       os: linux
#       sudo: required
#       env:
#         - TRAVIS_DIST_NAME="xenial"
    - dist: bionic
      compiler: gcc
      os: linux
      sudo: required
      env:
         - TRAVIS_DIST_NAME="bionic"
      compiler: gcc
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
            - sourceline: "deb http://archive.ubuntu.com/ubuntu cosmic main"
          packages:
            - -t bionic
            - gcc-9
            - g++-9
            - gdb
            - make/cosmic
          
before_install:
  - sudo apt-get update
  - if [[ ( "$TRAVIS_DIST_NAME" == "xenial" ) ]]; then sudo add-apt-repository ppa:fkrull/deadsnakes -y; fi
  - if [[ ( "$TRAVIS_DIST_NAME" == "xenial" ) ]]; then sudo apt-get update; fi
  - sudo apt-get install -y python3.6
  - sudo apt-get install python3-setuptools
  - sudo apt-get install -y python3-pip
  - sudo python3 -m pip install --upgrade pip
  - sudo apt-get install python3-numpy
  - sudo apt-get install libcgal-qt5-dev
  - mkdir -p build
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
  - sudo apt install cmake
  - sudo apt-mark hold mysql-server-5.7
  - sudo apt upgrade

script:
  - sudo python3 install.py build
#   Decomment following code if you have enough RAM to test the previously compiled binary+python program
#   - sudo python3 run_all.py build
  - cd cpp && sudo python3 test.py
  
  
after_success:
  - bash push.sh

after_failure:
# http://jsteemann.github.io/blog/2014/10/30/getting-core-dumps-of-failed-travisci-builds/
- coreFile=$(find . -maxdepth 1 -name "*core*" | head -n 1)
- |-
    if [[ -f "$coreFile" ]]
    then
        gdb -c "$coreFile" test \
            -ex "thread apply all bt" \
            -ex "set pagination 0" \
            -batch
    fi
    
    
env:
  global:
    secure: 
